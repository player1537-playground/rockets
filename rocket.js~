function init() {
    var SCALE = 30;
    
    var   b2Vec2 = Box2D.Common.Math.b2Vec2
    ,  b2AABB = Box2D.Collision.b2AABB
    ,	b2BodyDef = Box2D.Dynamics.b2BodyDef
    ,	b2Body = Box2D.Dynamics.b2Body
    ,	b2FixtureDef = Box2D.Dynamics.b2FixtureDef
    ,	b2Fixture = Box2D.Dynamics.b2Fixture
    ,	b2World = Box2D.Dynamics.b2World
    ,	b2MassData = Box2D.Collision.Shapes.b2MassData
    ,	b2PolygonShape = Box2D.Collision.Shapes.b2PolygonShape
    ,	b2CircleShape = Box2D.Collision.Shapes.b2CircleShape
    ,	b2DebugDraw = Box2D.Dynamics.b2DebugDraw
    ,  b2MouseJointDef =  Box2D.Dynamics.Joints.b2MouseJointDef
    ;

    // Create the world without gravity
    var world = new b2World(new b2Vec2(0, 0),
			    true);
    
    // Create the "ground", the first planet
    var fixDef = new b2FixtureDef;
    fixDef.density = 1.0;
    fixDef.friction = 0.5;
    fixDef.restitution = 0.2;
    
    // Define the location of the planet
    var bodyDef = new b2BodyDef;
    bodyDef.type = b2Body.b2_staticBody;
    bodyDef.position.x = 100 / SCALE;
    bodyDef.position.y = 100 / SCALE;

    // Define the shape of the planet
    fixDef.shape = new b2CircleShape(100 / SCALE);
    
    // Actually add it to the world
    world.CreateBody(bodyDef).CreateFixture(fixDef);
    
    // Start adding other objects
    bodyDef.type = b2Body.b2_dynamicBody;
    for (var i=0; i<1; i++) {
	fixDef.shape = new b2CircleShape(20 / SCALE);
	bodyDef.position.x = 100 / SCALE;
	bodyDef.position.y = 300 / SCALE;
	world.CreateBody(bodyDef).CreateFixture(fixDef);
    }
    
    // Set up debugDraw
    var debugDraw = new b2DebugDraw();
    debugDraw.SetSprite(document.getElementById("canvas").getContext("2d"));
    debugDraw.SetDrawScale(SCALE);
    debugDraw.SetFillAlpha(0.3);
    debugDraw.SetLineThickness(1.0);
    debugDraw.SetFlags(b2DebugDraw.e_shapeBit | b2DebugDraw.e_jointBit);
    world.SetDebugDraw(debugDraw);

    // Start updating
    (function update() {
	world.Step(1/60,
		   10,
		   10);
	world.DrawDebugData();
	world.ClearForces();
	
	// Simulate gravity
	
	
	requestAnimationFrame(update);
    })();
    
    
}